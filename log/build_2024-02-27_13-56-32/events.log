[0.000000] (-) TimerEvent: {}
[0.000622] (-) JobUnselected: {'identifier': 'my_interfaces'}
[0.000920] (-) JobUnselected: {'identifier': 'odd_num_pubsub'}
[0.000978] (-) JobUnselected: {'identifier': 'soccer_pubsub'}
[0.001023] (-) JobUnselected: {'identifier': 'sum_two_num_srvcli'}
[0.001153] (robot_localization) JobQueued: {'identifier': 'robot_localization', 'dependencies': OrderedDict([('my_interfaces', '/home/mbsaloka/Desktop/ros2_ichiro_task/install/my_interfaces')])}
[0.001234] (robot_localization) JobStarted: {'identifier': 'robot_localization'}
[0.097509] (-) TimerEvent: {}
[0.153380] (robot_localization) JobProgress: {'identifier': 'robot_localization', 'progress': 'cmake'}
[0.156450] (robot_localization) JobProgress: {'identifier': 'robot_localization', 'progress': 'build'}
[0.159219] (robot_localization) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/mbsaloka/Desktop/ros2_ichiro_task/build/robot_localization', '--', '-j16', '-l16'], 'cwd': '/home/mbsaloka/Desktop/ros2_ichiro_task/build/robot_localization', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'mbsaloka'), ('LC_TIME', 'id_ID.UTF-8'), ('GIO_MODULE_DIR', '/home/mbsaloka/snap/code/common/.cache/gio-modules'), ('XDG_SESSION_TYPE', 'x11'), ('GIT_ASKPASS', '/snap/code/152/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('GTK_EXE_PREFIX_VSCODE_SNAP_ORIG', ''), ('GDK_BACKEND_VSCODE_SNAP_ORIG', ''), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/mbsaloka/Desktop/ros2_ichiro_task/install/my_interfaces/lib:/opt/ros/iron/opt/rviz_ogre_vendor/lib:/opt/ros/iron/lib/x86_64-linux-gnu:/opt/ros/iron/lib'), ('HOME', '/home/mbsaloka'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('LOCPATH_VSCODE_SNAP_ORIG', ''), ('TERM_PROGRAM_VERSION', '1.86.2'), ('DESKTOP_SESSION', 'ubuntu'), ('GTK_PATH', '/snap/code/152/usr/lib/x86_64-linux-gnu/gtk-3.0'), ('GTK_IM_MODULE_FILE', '/home/mbsaloka/snap/code/common/.cache/immodules/immodules.cache'), ('GIO_LAUNCHED_DESKTOP_FILE', '/var/lib/snapd/desktop/applications/code_code.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('GSETTINGS_SCHEMA_DIR_VSCODE_SNAP_ORIG', ''), ('VSCODE_GIT_ASKPASS_MAIN', '/snap/code/152/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('LC_MONETARY', 'id_ID.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/snap/code/152/usr/share/code/code'), ('MANAGERPID', '2223'), ('SYSTEMD_EXEC_PID', '2748'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '6965'), ('ROS_DISTRO', 'iron'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'mbsaloka'), ('JOURNAL_STREAM', '8:2918'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_CONFIG_DIRS_VSCODE_SNAP_ORIG', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_SESSION_CLASS', 'user'), ('XDG_DATA_DIRS_VSCODE_SNAP_ORIG', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('USERNAME', 'mbsaloka'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/iron/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/mbsaloka-LOQ-15IRH8:@/tmp/.ICE-unix/2728,unix/mbsaloka-LOQ-15IRH8:/tmp/.ICE-unix/2728'), ('GTK_EXE_PREFIX', '/snap/code/152/usr'), ('INVOCATION_ID', 'fb3472b5a7314d06aa840edb1a473d00'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'id_ID.UTF-8'), ('BAMF_DESKTOP_FILE_HINT', '/var/lib/snapd/desktop/applications/code_code.desktop'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('GDK_BACKEND', 'x11'), ('DISPLAY', ':1'), ('LOCPATH', '/snap/code/152/usr/lib/locale'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LC_TELEPHONE', 'id_ID.UTF-8'), ('GIO_MODULE_DIR_VSCODE_SNAP_ORIG', ''), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-c3044f75c5.sock'), ('TERM_PROGRAM', 'vscode'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('GSETTINGS_SCHEMA_DIR', '/home/mbsaloka/snap/code/152/.local/share/glib-2.0/schemas'), ('AMENT_PREFIX_PATH', '/home/mbsaloka/Desktop/ros2_ichiro_task/install/my_interfaces:/opt/ros/iron'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SHELL', '/bin/bash'), ('LC_NAME', 'id_ID.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GTK_PATH_VSCODE_SNAP_ORIG', ''), ('GTK_IM_MODULE_FILE_VSCODE_SNAP_ORIG', ''), ('LC_MEASUREMENT', 'id_ID.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('LC_IDENTIFICATION', 'id_ID.UTF-8'), ('ROS_AUTOMATIC_DISCOVERY_RANGE', 'SUBNET'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/mbsaloka/Desktop/ros2_ichiro_task/build/robot_localization'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/home/mbsaloka/snap/code/152/.local/share:/home/mbsaloka/snap/code/152:/snap/code/152/usr/share:/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/mbsaloka/Desktop/ros2_ichiro_task/install/my_interfaces/lib/python3.10/site-packages:/opt/ros/iron/lib/python3.10/site-packages'), ('LC_NUMERIC', 'id_ID.UTF-8'), ('LC_PAPER', 'id_ID.UTF-8'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/mbsaloka/Desktop/ros2_ichiro_task/install/my_interfaces:/opt/ros/iron')]), 'shell': False}
[0.197876] (-) TimerEvent: {}
[0.299026] (-) TimerEvent: {}
[0.380229] (robot_localization) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target inertial_unit\x1b[0m\n'}
[0.399213] (-) TimerEvent: {}
[0.415842] (robot_localization) StdoutLine: {'line': b'[ 16%] Built target robot_controller\n'}
[0.417921] (robot_localization) StdoutLine: {'line': b'[ 33%] Built target odometry\n'}
[0.420052] (robot_localization) StdoutLine: {'line': b'[ 41%] \x1b[32mBuilding CXX object CMakeFiles/localization.dir/src/RobotLocalization.cpp.o\x1b[0m\n'}
[0.423675] (robot_localization) StdoutLine: {'line': b'[ 58%] Built target object_recognizer\n'}
[0.428960] (robot_localization) StdoutLine: {'line': b'[ 75%] Built target robot_localization\n'}
[0.436858] (robot_localization) StdoutLine: {'line': b'[ 91%] Built target inertial_unit\n'}
[0.499445] (-) TimerEvent: {}
[0.600107] (-) TimerEvent: {}
[0.701067] (-) TimerEvent: {}
[0.802081] (-) TimerEvent: {}
[0.902787] (-) TimerEvent: {}
[1.003349] (-) TimerEvent: {}
[1.104009] (-) TimerEvent: {}
[1.204521] (-) TimerEvent: {}
[1.305054] (-) TimerEvent: {}
[1.405599] (-) TimerEvent: {}
[1.506074] (-) TimerEvent: {}
[1.606654] (-) TimerEvent: {}
[1.707137] (-) TimerEvent: {}
[1.807555] (-) TimerEvent: {}
[1.907959] (-) TimerEvent: {}
[2.008314] (-) TimerEvent: {}
[2.108721] (-) TimerEvent: {}
[2.209131] (-) TimerEvent: {}
[2.309550] (-) TimerEvent: {}
[2.409875] (-) TimerEvent: {}
[2.510273] (-) TimerEvent: {}
[2.610706] (-) TimerEvent: {}
[2.711159] (-) TimerEvent: {}
[2.811597] (-) TimerEvent: {}
[2.911913] (-) TimerEvent: {}
[3.012346] (-) TimerEvent: {}
[3.112784] (-) TimerEvent: {}
[3.213227] (-) TimerEvent: {}
[3.313719] (-) TimerEvent: {}
[3.414157] (-) TimerEvent: {}
[3.514606] (-) TimerEvent: {}
[3.615012] (-) TimerEvent: {}
[3.715380] (-) TimerEvent: {}
[3.815968] (-) TimerEvent: {}
[3.916335] (-) TimerEvent: {}
[4.016750] (-) TimerEvent: {}
[4.117085] (-) TimerEvent: {}
[4.217544] (-) TimerEvent: {}
[4.317893] (-) TimerEvent: {}
[4.418360] (-) TimerEvent: {}
[4.518790] (-) TimerEvent: {}
[4.619241] (-) TimerEvent: {}
[4.719594] (-) TimerEvent: {}
[4.820074] (-) TimerEvent: {}
[4.920428] (-) TimerEvent: {}
[5.020873] (-) TimerEvent: {}
[5.121313] (-) TimerEvent: {}
[5.221723] (-) TimerEvent: {}
[5.322072] (-) TimerEvent: {}
[5.422546] (-) TimerEvent: {}
[5.523007] (-) TimerEvent: {}
[5.623426] (-) TimerEvent: {}
[5.723812] (-) TimerEvent: {}
[5.824151] (-) TimerEvent: {}
[5.924573] (-) TimerEvent: {}
[6.025041] (-) TimerEvent: {}
[6.125449] (-) TimerEvent: {}
[6.225900] (-) TimerEvent: {}
[6.326280] (-) TimerEvent: {}
[6.426804] (-) TimerEvent: {}
[6.527657] (-) TimerEvent: {}
[6.582774] (robot_localization) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[6.583074] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[6.583168] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.583245] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.583621] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.583892] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.583977] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.584056] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.584134] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.584207] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/rclcpp.hpp:167\x1b[m\x1b[K,\n'}
[6.584664] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mbsaloka/Desktop/ros2_ichiro_task/src/robot_localization/include/robot_localization/RobotLocalization.hpp:10\x1b[m\x1b[K,\n'}
[6.584858] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mbsaloka/Desktop/ros2_ichiro_task/src/robot_localization/src/RobotLocalization.cpp:1\x1b[m\x1b[K:\n'}
[6.584944] (robot_localization) StderrLine: {'line': b'/opt/ros/iron/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; MessageT = my_interfaces::msg::Double_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.585102] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = my_interfaces::msg::Double_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_interfaces::msg::Double_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = my_interfaces::msg::Double_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.585297] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_interfaces::msg::Double_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_interfaces::msg::Double_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = my_interfaces::msg::Double_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.585394] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_interfaces::msg::Double_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_interfaces::msg::Double_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.585471] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_interfaces::msg::Double_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_interfaces::msg::Double_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.585549] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mbsaloka/Desktop/ros2_ichiro_task/src/robot_localization/src/RobotLocalization.cpp:22:63:\x1b[m\x1b[K   required from here\n'}
[6.585620] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&)>, std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<my_interfaces::msg::Double_<std::allocator<void> >, std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[6.585733] (robot_localization) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[6.585800] (robot_localization) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.585867] (robot_localization) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/client.hpp:29\x1b[m\x1b[K,\n'}
[6.585931] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[6.585995] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.586061] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.586125] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.586192] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.586255] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.586319] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.586384] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.586449] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/rclcpp.hpp:167\x1b[m\x1b[K,\n'}
[6.586516] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mbsaloka/Desktop/ros2_ichiro_task/src/robot_localization/include/robot_localization/RobotLocalization.hpp:10\x1b[m\x1b[K,\n'}
[6.586583] (robot_localization) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mbsaloka/Desktop/ros2_ichiro_task/src/robot_localization/src/RobotLocalization.cpp:1\x1b[m\x1b[K:\n'}
[6.586649] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&)>, std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.586749] (robot_localization) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[6.586814] (robot_localization) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.586880] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.586946] (robot_localization) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&)>, std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.587040] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&)>, std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&)>, std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&)>, std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&)>, std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&)>, std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.587436] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; MessageT = my_interfaces::msg::Double_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.587518] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = my_interfaces::msg::Double_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_interfaces::msg::Double_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = my_interfaces::msg::Double_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.587605] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_interfaces::msg::Double_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_interfaces::msg::Double_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = my_interfaces::msg::Double_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.587680] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_interfaces::msg::Double_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_interfaces::msg::Double_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.587757] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_interfaces::msg::Double_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_interfaces::msg::Double_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.587835] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mbsaloka/Desktop/ros2_ichiro_task/src/robot_localization/src/RobotLocalization.cpp:22:63:\x1b[m\x1b[K   required from here\n'}
[6.587901] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.587974] (robot_localization) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[6.588045] (robot_localization) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.588114] (robot_localization) StderrLine: {'line': b'/opt/ros/iron/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; MessageT = my_interfaces::msg::Double_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.588189] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = my_interfaces::msg::Double_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_interfaces::msg::Double_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = my_interfaces::msg::Double_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.588264] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_interfaces::msg::Double_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_interfaces::msg::Double_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = my_interfaces::msg::Double_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.588348] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_interfaces::msg::Double_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_interfaces::msg::Double_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.588431] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/iron/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_interfaces::msg::Double_<std::allocator<void> >; CallbackT = std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_interfaces::msg::Double_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_interfaces::msg::Double_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.588505] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mbsaloka/Desktop/ros2_ichiro_task/src/robot_localization/src/RobotLocalization.cpp:22:63:\x1b[m\x1b[K   required from here\n'}
[6.588573] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&)>, std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.588666] (robot_localization) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[6.588734] (robot_localization) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.588804] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<my_interfaces::msg::Double_<std::allocator<void> >, std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&)>, std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.588898] (robot_localization) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[6.588974] (robot_localization) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.589044] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&)>, std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.589159] (robot_localization) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[6.589239] (robot_localization) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.589315] (robot_localization) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<my_interfaces::msg::Double_<std::allocator<void> >, std::_Bind<void (RobotLocalization::*(RobotLocalization*, std::_Placeholder<1>))(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<my_interfaces::msg::Pose_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&)>, std::function<void(const my_interfaces::msg::Double_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<my_interfaces::msg::Double_<std::allocator<void> >, std::default_delete<my_interfaces::msg::Double_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const my_interfaces::msg::Double_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<my_interfaces::msg::Double_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.589419] (robot_localization) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[6.589497] (robot_localization) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.627785] (-) TimerEvent: {}
[6.728306] (-) TimerEvent: {}
[6.828799] (-) TimerEvent: {}
[6.929287] (-) TimerEvent: {}
[7.029783] (-) TimerEvent: {}
[7.130261] (-) TimerEvent: {}
[7.230769] (-) TimerEvent: {}
[7.331291] (-) TimerEvent: {}
[7.431856] (-) TimerEvent: {}
[7.532406] (-) TimerEvent: {}
[7.632908] (-) TimerEvent: {}
[7.733401] (-) TimerEvent: {}
[7.833841] (-) TimerEvent: {}
[7.934328] (-) TimerEvent: {}
[8.034966] (-) TimerEvent: {}
[8.135631] (-) TimerEvent: {}
[8.236265] (-) TimerEvent: {}
[8.336884] (-) TimerEvent: {}
[8.437447] (-) TimerEvent: {}
[8.538052] (-) TimerEvent: {}
[8.638524] (-) TimerEvent: {}
[8.739177] (-) TimerEvent: {}
[8.839749] (-) TimerEvent: {}
[8.940375] (-) TimerEvent: {}
[9.040868] (-) TimerEvent: {}
[9.141669] (-) TimerEvent: {}
[9.242271] (-) TimerEvent: {}
[9.342891] (-) TimerEvent: {}
[9.443490] (-) TimerEvent: {}
[9.544190] (-) TimerEvent: {}
[9.644812] (-) TimerEvent: {}
[9.745527] (-) TimerEvent: {}
[9.846229] (-) TimerEvent: {}
[9.946910] (-) TimerEvent: {}
[10.047546] (-) TimerEvent: {}
[10.148410] (-) TimerEvent: {}
[10.249287] (-) TimerEvent: {}
[10.350068] (-) TimerEvent: {}
[10.450743] (-) TimerEvent: {}
[10.551219] (-) TimerEvent: {}
[10.651643] (-) TimerEvent: {}
[10.752395] (-) TimerEvent: {}
[10.853236] (-) TimerEvent: {}
[10.953750] (-) TimerEvent: {}
[11.054334] (-) TimerEvent: {}
[11.155002] (-) TimerEvent: {}
[11.255520] (-) TimerEvent: {}
[11.356154] (-) TimerEvent: {}
[11.456907] (-) TimerEvent: {}
[11.557427] (-) TimerEvent: {}
[11.657807] (-) TimerEvent: {}
[11.758269] (-) TimerEvent: {}
[11.858712] (-) TimerEvent: {}
[11.959246] (-) TimerEvent: {}
[12.059903] (-) TimerEvent: {}
[12.160398] (-) TimerEvent: {}
[12.260901] (-) TimerEvent: {}
[12.361611] (-) TimerEvent: {}
[12.462247] (-) TimerEvent: {}
[12.562697] (-) TimerEvent: {}
[12.663292] (-) TimerEvent: {}
[12.764005] (-) TimerEvent: {}
[12.864801] (-) TimerEvent: {}
[12.965726] (-) TimerEvent: {}
[13.066671] (-) TimerEvent: {}
[13.167240] (-) TimerEvent: {}
[13.267782] (-) TimerEvent: {}
[13.368231] (-) TimerEvent: {}
[13.468662] (-) TimerEvent: {}
[13.569086] (-) TimerEvent: {}
[13.669532] (-) TimerEvent: {}
[13.769975] (-) TimerEvent: {}
[13.870405] (-) TimerEvent: {}
[13.970765] (-) TimerEvent: {}
[14.071277] (-) TimerEvent: {}
[14.171726] (-) TimerEvent: {}
[14.272153] (-) TimerEvent: {}
[14.361876] (robot_localization) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/localization.dir/build.make:76: CMakeFiles/localization.dir/src/RobotLocalization.cpp.o] Error 1\n'}
[14.362534] (robot_localization) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:225: CMakeFiles/localization.dir/all] Error 2\n'}
[14.363094] (robot_localization) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[14.367585] (robot_localization) CommandEnded: {'returncode': 2}
[14.372364] (-) TimerEvent: {}
[14.472781] (-) TimerEvent: {}
[14.573475] (-) TimerEvent: {}
[14.674111] (-) TimerEvent: {}
[14.685119] (robot_localization) JobEnded: {'identifier': 'robot_localization', 'rc': 2}
[14.695974] (-) EventReactorShutdown: {}
